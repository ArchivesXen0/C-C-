-- Constants for GUI positioning and size
local GUI_WIDTH = 150
local GUI_HEIGHT = 300
local BUTTON_HEIGHT = 25
local BUTTON_PADDING = 5

-- Variables for fly toggle
local isFlying = false
local flySpeed = 50  -- Adjust as needed

-- Create the main GUI
local mainGui = Instance.new("ScreenGui")
mainGui.Name = "CheatGUI"
mainGui.Parent = game.Players.LocalPlayer.PlayerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, GUI_WIDTH, 0, GUI_HEIGHT)
mainFrame.Position = UDim2.new(0, -GUI_WIDTH + 10, 0.5, -GUI_HEIGHT / 2)
mainFrame.BackgroundColor3 = Color3.new(0, 0, 0)
mainFrame.BorderColor3 = Color3.new(1, 0, 0)
mainFrame.BorderSizePixel = 3
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = mainGui

-- Create close button (X)
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -20, 0, 0)
closeButton.BackgroundColor3 = Color3.new(1, 0, 0)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.TextSize = 14
closeButton.Text = "X"
closeButton.Parent = mainFrame

-- Create the message GUI for when main GUI is closed
local messageGui = Instance.new("ScreenGui")
messageGui.Name = "MessageGUI"
messageGui.Parent = mainGui

local messageFrame = Instance.new("Frame")
messageFrame.Name = "MessageFrame"
messageFrame.Size = UDim2.new(0, 150, 0, 30)
messageFrame.Position = UDim2.new(0, 10, 0.5, -15)
messageFrame.BackgroundColor3 = Color3.new(0, 0, 0)
messageFrame.BorderColor3 = Color3.new(1, 0, 0)
messageFrame.BorderSizePixel = 3
messageFrame.Visible = false
messageFrame.Parent = messageGui

local messageLabel = Instance.new("TextLabel")
messageLabel.Name = "MessageLabel"
messageLabel.Size = UDim2.new(1, 0, 1, 0)
messageLabel.Position = UDim2.new(0, 0, 0, 0)
messageLabel.BackgroundColor3 = Color3.new(0, 0, 0)
messageLabel.TextColor3 = Color3.new(1, 1, 1)
messageLabel.TextSize = 14
messageLabel.Text = "Open GUI to reopen it."
messageLabel.Parent = messageFrame

-- Function to toggle visibility of main GUI and message GUI
local function toggleGUI()
    mainFrame.Visible = not mainFrame.Visible
    messageFrame.Visible = not messageFrame.Visible
end

-- Function to create buttons
local function createButton(text, callback)
    local button = Instance.new("TextButton")
    button.Name = text .. "Button"
    button.Size = UDim2.new(0, GUI_WIDTH - 10, 0, BUTTON_HEIGHT)
    button.Position = UDim2.new(0, 5, 0, (#mainFrame:GetChildren() - 1) * (BUTTON_HEIGHT + BUTTON_PADDING) + BUTTON_PADDING)
    button.BackgroundColor3 = Color3.new(0, 0, 0)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.TextSize = 14
    button.Text = text
    button.Parent = mainFrame
    button.MouseButton1Click:Connect(callback)
end

-- Functionality for each button (using previously defined functions)

-- Example functions
local function ESP()
    -- Your ESP implementation
end

local function HitboxExpander()
    -- Your Hitbox Expander implementation
end

local function toggleFly()
    isFlying = not isFlying
    if isFlying then
        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.RightAlt then
                -- Enable fly
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
                game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, flySpeed, 0)
            end
        end)
    else
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
    end
end

-- Create buttons with callbacks
createButton("ESP", ESP)
createButton("Hitbox Expander", HitboxExpander)
createButton("Toggle Fly (Right ALT)", toggleFly)

-- Close button click event
closeButton.MouseButton1Click:Connect(function()
    toggleGUI()
end)
